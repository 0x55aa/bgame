cmake_minimum_required(VERSION 3.1)
project("Black Future")

if (APPLE)
    #set(SFML_STATIC_LIBRARIES TRUE)
    set(SFML_ROOT ${PROJECT_SOURCE_DIR}/external/osx/SFML)
    message("Forcing SFML root to " ${SFML_ROOT})
endif()
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../cmake_modules)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED on)
if (NOT(WIN32))
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -Wall -Wpedantic -march=native -mtune=native -pthread -g -fopenmp -ffast-math")
	set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -L/opt/local/lib -pthread -flto")
endif()
if (WIN32)
	set(CMAKE_BUILD_TYPE RELEASE)
	set(CMAKE_CXX_FLAGS "/Ox /GL /openmp /EHr /EHsc")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /TC /Ox /GL /openmp")
	set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} /LTCG")
endif()

include(cotire)

# Build SFML
find_package(SFML 2.4 COMPONENTS system window graphics REQUIRED)
message(${SFML_INCLUDE_DIR})
include_directories(${SFML_INCLUDE_DIR})

# Windows shims
if (WIN32)
	include_directories(external/fixwindows)
else()
	include_directories(external/fixothers)
endif()
include_directories(external/rltk/rltk)
include_directories(external/FastNoise)
include_directories(external/lua/src)
include_directories(external/zlib)
include_directories(external)

add_subdirectory(external)
include_directories(${SFML_INCLUDE_DIR})

add_subdirectory(components)
add_subdirectory(planet)
add_subdirectory(raws)
add_subdirectory(systems)
add_subdirectory(utils)
add_subdirectory(main)

add_executable(bgame main.cpp)

target_link_libraries(bgame)
target_link_libraries(bgame ${SFML_LIBRARIES})
target_link_libraries(bgame rltk)
target_link_libraries(bgame FastNoise)
target_link_libraries(bgame components)
target_link_libraries(bgame planet)
target_link_libraries(bgame raws)
target_link_libraries(bgame bfmain)
target_link_libraries(bgame utils)
target_link_libraries(bgame systems)
target_link_libraries(bgame sqlite)
target_link_libraries(bgame imgui)
target_link_libraries(bgame imgui-sfml)

cotire(bgame)
